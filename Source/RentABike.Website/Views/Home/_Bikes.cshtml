@using PagedList.Mvc
@model PagedList.IPagedList<RentABike.Models.Bike>
@using Roles = RentABike.Models.Constants.Roles


@if (User.Identity.IsAuthenticated && User.IsInRole(Roles.Admin))
{
    <p>
        <button class="btn btn-lg btn-warning" onclick='window.location = "@Url.Action("CreateNewBike", "Bike") ";'>Add new bike</button>
    </p>
}

<div align="center">
    <span>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</span>

    @{
        if (ViewBag.RentPointFilter != null)
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                new {page, rentPointFilter = ViewBag.RentPointFilter}),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions {HttpMethod = "GET", UpdateTargetId = "results"}))
        }
        else if (ViewBag.BikeTypeFilter != null)
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                new {page, bikeTypeFilter = ViewBag.BikeTypeFilter}),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions {HttpMethod = "GET", UpdateTargetId = "results"}))
        }
        else
        {
            @Html.PagedListPager(Model, page => Url.Action("Index",
                new {page, currentFilter = ViewBag.CurrentFilter}),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions {HttpMethod = "GET", UpdateTargetId = "results"}))
        }
    }
</div>


@foreach (var bike in Model)
{
    Html.RenderPartial("_Bike", bike);
}

