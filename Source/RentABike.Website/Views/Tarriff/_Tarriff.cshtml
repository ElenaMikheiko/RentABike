@model RentABike.ViewModels.TarriffViewModel

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        @if (Model.IsNew)
        {
            <h4 class="modal-title">Create new tarriff for @Model.BikeType.Type type</h4>
        }
        else
        {
            <h4 class="modal-title">Edit tarriff for @Model.BikeType.Type type</h4>
        }
    </div>
    @using (Html.BeginForm("SaveTarriff", "Tarriff"))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.IsNew)
        @Html.HiddenFor(m => m.BikeType.Id)
        <div class="modal-body">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @for (var i = 0; i < Model.Tarriffs.Count; i++)
                {
                    @Html.HiddenFor(m => m.Tarriffs[i].KindOfRent.Id)
                    @Html.HiddenFor(m => m.Tarriffs[i].Quantity)
                    <div class="form-group">
                        <label class="control-label col-md-2">@Model.Tarriffs[i].Quantity @Model.Tarriffs[i].KindOfRent.Kind</label>
                        <div class="col-sm-5">
                            @Html.EditorFor(model => model.Tarriffs[i].Amount, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.Tarriffs[i].Amount, "", new {@class = "text-danger"})
                        </div>
                        <div>BYN</div>
                    </div>
                }
            </div>
        </div>

        <div class="modal-footer">
            @if (Model.IsNew)
            {
                <input type="submit" value="Create" class="btn btn-default"/>
            }
            else
            {
                <input type="submit" value="Update" class="btn btn-default"/>
            }
        </div>
    }
</div>
